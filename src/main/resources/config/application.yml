spring:
  application:
    name: music-release-notifier-core
  security:
    oauth2:
      client:
#        registration:
#          keycloak:
#            client-id: music-release-notifier-client-credentials
#            client-secret: HBz2L6Apo6g2w1ohVM2S3wul6Dv8zH85
#            scope:
#              - profile
#              - openid
#              - email
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:7080/realms/music-release-notifier/protocol/openid-connect/certs



  rabbitmq:
    publisher-confirm-type: correlated
    publisher-returns: true
    template:
      mandatory: true

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    driver-class-name: org.postgresql.Driver
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
      validation-timeout: 5000 # 5 seconds
      connection-test-query: SELECT 1
      pool-name: HikariPool-1
  jpa:
    hibernate:
      ddl-auto: update

  liquibase:
    change-log: classpath:config/liquibase/changelog-master.xml
    enabled: true

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}

tidal:
  client-id: # env vars
  client-secret: # env vars

spotify:
  client-id: # env vars
  client-secret: # env vars

outbox:
  publisher:
    cloudevent-source: "com.hvs.kotlinspringplayground"
    polling-rate: PT10S
  database: postgres

rabbitmq:
  exchange: ${RABBITMQ_EXCHANGE}
  queue: ${RABBITMQ_QUEUE}
  routing-key: ${RABBITMQ_ROUTING_KEY}
  delivery-timeout: 1